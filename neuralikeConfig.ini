
#TODO Updated list of models and datasets

[custom]
;directory for chains/output
;it is better if you set an absolute path
chainsdir = simplemc/chains/

;set model
;model options: LCDM, LCDMasslessnu, nuLCDM, NeffLCDM, noradLCDM, nuoLCDM,
;nuwLCDM, oLCDM, wCDM, waCDM, owCDM, owaCDM, JordiCDM, WeirdCDM, TLight, StepCDM,
;Spline, PolyCDM, fPolyCDM, Decay, Decay01, Decay05, EarlyDE, EarlyDE_rd_DE, SlowRDE, sline
;more options located in the RunBase.py
model = LCDM

;prefact options : [pre, phy]
prefact = phy

;set datasets used. Ex: UnionSN+BBAO+Planck
;data options: HD, BBAO, GBAO, GBAO_no6dF, CMASS, LBAO, LaBAO,
;LxBAO, MGS, Planck, WMAP, PlRd, WRd, PlDa, PlRdx10, CMBW, SN, SNx10, UnionSN,
;RiessH0, 6dFGS, dline, generic
datasets = HD+CBAO+fs8

;sampler can be {mcmc, nested, emcee}
;mcmc -> metropolis-hastings
;nested -> nested sampling
;emcee
;maxlike -> Maximum Likelihood Analyzer
;genetic -> ga_deap (genetic using deap library)
analyzername = nested

[nested]
;type for dynesty -> {'single','multi', 'balls', 'cubes'}
nestedType = multi 

;it is recommended around nlivepoints=50*ndim, recommended 1024
nlivepoints = 1000

;recommended 0.01
accuracy = 0.01

;u for flat(uniform) or g for gaussian prior
priortype = u

;when using gaussian prior
sigma = 2


;if nproc = 0 uses mp.cpu_count()//2 by default, 
;you can set with another positive integer
nproc = 4

;Produce output on the fly
showfiles = True

;dynamic option is only for dynesty engine
;dynamic and neuralNetwork can be False/True
dynamic = False
; use genetic algorithm to generate live points
useGenetic = False
;use neural network to predict likelihoods (True/False),
;edit block neuralike to set options
useNeuralike = True

[neuralike]
;neuralike contains options to use a neural network in likelihood evaluations over the parameter space
epochs = 300
# lr = 0.01 default for adagrad
# lr = 0.0001 default for adaBound
# lr = 1 default for adadelta
learning_rate = 0.001
batch_size = 32
psplit = 0.8
;hidden_layers_neurons: number of nodes per layer separated by commas
hidden_layers_neurons = 200, 200, 200, 200
plot = True
patience = 100
# neuralike
nrand = 1000
valid_loss = 0.1
nstart_samples = 100000
;nstart_stop_criterion = 50
nstart_stop_criterion = 500
updInt = 1000
ncalls_excess = 1000

;genetic parameters

[ga_deap]
;Population size
population = 502
;Crossover probability
crossover = 0.5
;Mutation probability
mutation = 0.5
;Max generation number
max_generation = 5
;Size of the Hall of Fame
hof_size = 2
;Crowding factor
crowding_factor = 1

;Plot Generation vs Fitness
plot_fitness = False

;compute errror from Hessian matrix
;False/True
compute_errors = False

;If compute_errors is True
;plot Fisher matrix
show_contours = False

;If show_contours is True, then
;2D plot for the parameters:
plot_param1 = h
plot_param2 = Om
